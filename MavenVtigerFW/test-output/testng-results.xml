<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="16003" started-at="2020-06-19T07:45:10Z" finished-at="2020-06-19T07:45:26Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="16003" started-at="2020-06-19T07:45:10Z" finished-at="2020-06-19T07:45:26Z">
      <class name="com.vtiger.testscripts.CreateLeadTest">
        <test-method status="PASS" signature="configBS()[pri:0, instance:com.vtiger.testscripts.CreateLeadTest@146ba0ac]" name="configBS" is-config="true" duration-ms="34" started-at="2020-06-19T07:45:10Z" finished-at="2020-06-19T07:45:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method status="PASS" signature="configBC()[pri:0, instance:com.vtiger.testscripts.CreateLeadTest@146ba0ac]" name="configBC" is-config="true" duration-ms="5471" started-at="2020-06-19T07:45:10Z" finished-at="2020-06-19T07:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.vtiger.testscripts.CreateLeadTest@146ba0ac]" name="configBM" is-config="true" duration-ms="2213" started-at="2020-06-19T07:45:16Z" finished-at="2020-06-19T07:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="FAIL" signature="createLead()[pri:0, instance:com.vtiger.testscripts.CreateLeadTest@146ba0ac]" name="createLead" duration-ms="6381" started-at="2020-06-19T07:45:18Z" finished-at="2020-06-19T07:45:24Z">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[invalid selector: An invalid or illegal selector was specified
  (Session info: chrome=83.0.4103.106)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-CS66K3EO', ip: '192.168.0.5', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_162'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.106, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\calmc\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62598}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 87468ffdaad320f80e2d8de831c426e8
*** Element info: {Using=name, value=//input[@value='  Save  ']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: invalid selector: An invalid or illegal selector was specified
  (Session info: chrome=83.0.4103.106)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-CS66K3EO', ip: '192.168.0.5', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_162'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.106, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\calmc\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62598}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 87468ffdaad320f80e2d8de831c426e8
*** Element info: {Using=name, value=//input[@value='  Save  ']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:404)
at org.openqa.selenium.By$ByName.findElement(By.java:284)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at com.vtiger.testscripts.CreateLeadTest.createLead(CreateLeadTest.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createLead -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.vtiger.testscripts.CreateLeadTest@146ba0ac]" name="configAM" is-config="true" duration-ms="1189" started-at="2020-06-19T07:45:24Z" finished-at="2020-06-19T07:45:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configAC()[pri:0, instance:com.vtiger.testscripts.CreateLeadTest@146ba0ac]" name="configAC" is-config="true" duration-ms="708" started-at="2020-06-19T07:45:26Z" finished-at="2020-06-19T07:45:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method status="PASS" signature="configAS()[pri:0, instance:com.vtiger.testscripts.CreateLeadTest@146ba0ac]" name="configAS" is-config="true" duration-ms="1" started-at="2020-06-19T07:45:26Z" finished-at="2020-06-19T07:45:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
      </class> <!-- com.vtiger.testscripts.CreateLeadTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
